===================
Convert to Solr XML
===================



We need to set the site since we're a functional test:

>>> import zeit.cms.testing       
>>> zeit.cms.testing.set_site()


Get article for adapter tests:

>>> import zeit.cms.content.keyword
>>> import zope.component
>>> keywords = zope.component.getUtility(zeit.cms.content.interfaces.IKeywords)

>>> import zeit.cms.interfaces
>>> import zeit.cms.testing
>>> import datetime
>>> principal = zeit.cms.testing.create_interaction() 
>>> article = zeit.cms.interfaces.ICMSContent(
...     'http://xml.zeit.de/online/2007/01/Somalia')
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ICommonMetadata(
...         checked_out).breaking_news = True
...     zeit.cms.content.interfaces.ICommonMetadata(
...         checked_out).keywords = keywords.find_keywords('staat')


>>> images = zeit.content.image.interfaces.IImages(article)
>>> image = zeit.cms.interfaces.ICMSContent(
...     'http://xml.zeit.de/2006/DSC00109_2.JPG')
>>> checked_out = zeit.cms.checkout.interfaces.ICheckoutManager(
...     image).checkout()
>>> image_metadata = zeit.content.image.interfaces.IImageMetadata(checked_out)
>>> image_metadata.expires = datetime.datetime(2007, 4, 1)
>>> checked_in = zeit.cms.checkout.interfaces.ICheckinManager(
...     checked_out).checkin()
>>> images.images = (checked_in, )


Build a converter:

>>> import zeit.solr.interfaces
>>> article_converter = zeit.solr.interfaces.ISolrConverter(article)
>>> article_converter
<zeit.solr.converter.SolrConverter object at 0xc5f02ac>


Convert an article and check resultset:

>>> import lxml.etree
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add ...>
  <doc>
    <field name="authors">Hans Meiser</field>
    <field name="authors_fulltext">Hans Meiser</field>
    <field name="breaking_news">true</field>
    <field name="byline">Von Jochen Stahnke</field>
    <field name="date-last-modified">20...Z</field>
    <field name="keywords"></field>
    <field name="last_modified_by">zope.user</field>
    <field name="main_text">Kriegsherr...</field>
    <field name="published">not-published</field>
    <field name="image-reference">http://xml.zeit.de/2006/DSC00109_2.JPG</field>
    <field name="image-reference"></field>
    <field name="image-reference">JPG</field>
    <field name="ressort">International</field>
    <field name="serie">-</field>
    <field name="subtitle">Im Zuge des &#228;thiopischen Vormarsches auf Mogadischu kriechen in Somalia auch die alten Miliz-Chefs wieder hervor.</field>
    <field name="supertitle">Somalia</field>
    <field name="teaser_title">R&#252;ckkehr der Warlords</field>
    <field name="teaser_text">Im Zuge des &#228;thiopischen Vormarsches auf Mogadischu kriechen in Somalia auch die alten Miliz-Chefs wieder hervor.</field>
    <field name="title">R&#252;ckkehr der Warlords</field>
    <field name="type">article</field>
    <field name="uuid">{urn:uuid:<GUID>}</field>
    <field name="volume">1</field>
    <field name="uniqueId">http://xml.zeit.de/online/2007/01/Somalia</field>
    <field name="year">2007</field>
    <field name="icon">/++noop++7b96ef8299459c6372971b040141db4d/@@/zeit-content-article-interfaces-IArticle-zmi_icon.png</field>
  </doc>
</add>
<BLANKLINE>

>>> zope.index.text.interfaces.ISearchableText(article).getSearchableText()
[u'Kriegsherr Hussein Mohammed Aidid hat ...


Check out the article for further field tests.

>>> checked_out = zeit.cms.checkout.interfaces.ICheckoutManager(
...     article).checkout()
>>> article_converter2 = zeit.solr.interfaces.ISolrConverter(checked_out)
>>> article_converter2
<zeit.solr.converter.SolrConverter object at ...>
>>> root_node = article_converter2.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add ...>
  <doc>
    <field name="authors">Hans Meiser</field>
    <field name="authors_fulltext">Hans Meiser</field>
    <field name="breaking_news">true</field>
    <field name="byline">Von Jochen Stahnke</field>
    <field name="keywords">Staatliche Sozialleistung Sozialstaat Staatsoberhaupt Staatsdefizit Staatsquote Staatsfinanzen Staatsanwaltschaft Staatsangeh&#246;rigkeit Staatsgrenze Staatsorgane Staatsverschuldung Verstaatlichung Staatssymbol Staat Staatsfinanzen Staat Staatsbesuch</field>
    <field name="keywords_list">Staatliche Sozialleistung</field>
    <field name="keywords_list">Sozialstaat</field>
    <field name="keywords_list">Staatsoberhaupt</field>
    <field name="keywords_list">Staatsdefizit</field>
    <field name="keywords_list">Staatsquote</field>
    <field name="keywords_list">Staatsfinanzen</field>
    <field name="keywords_list">Staatsanwaltschaft</field>
    <field name="keywords_list">Staatsangeh&#246;rigkeit</field>
    <field name="keywords_list">Staatsgrenze</field>
    <field name="keywords_list">Staatsorgane</field>
    <field name="keywords_list">Staatsverschuldung</field>
    <field name="keywords_list">Verstaatlichung</field>
    <field name="keywords_list">Staatssymbol</field>
    <field name="keywords_list">Staat</field>
    <field name="keywords_list">Staatsfinanzen</field>
    <field name="keywords_list">Staat</field>
    <field name="keywords_list">Staatsbesuch</field>
    <field name="last_modified_by">zope.user</field>
    <field name="main_text">Kriegsherr...</field>
    <field name="published">not-published</field>
    <field name="ressort">International</field>
    <field name="serie">-</field>
    <field name="subtitle">Im Zuge des &#228;thiopischen Vormarsches auf Mogadischu kriechen in Somalia auch die alten Miliz-Chefs wieder hervor.</field>
    <field name="supertitle">Somalia</field>
    <field name="teaser_title">R&#252;ckkehr der Warlords</field>
    <field name="teaser_text">Im Zuge des &#228;thiopischen Vormarsches auf Mogadischu kriechen in Somalia auch die alten Miliz-Chefs wieder hervor.</field>
    <field name="title">R&#252;ckkehr der Warlords</field>
    <field name="type">article</field>
    <field name="uuid">{urn:uuid:<GUID>}</field>
    <field name="volume">1</field>
    <field name="uniqueId">http://xml.zeit.de/online/2007/01/Somalia</field>
    <field name="year">2007</field>
    <field name="icon">/++noop++7b96ef8299459c6372971b040141db4d/@@/zeit-content-article-interfaces-IArticle-zmi_icon.png</field>
  </doc>
</add>
<BLANKLINE>

>>> checked_in = zeit.cms.checkout.interfaces.ICheckinManager(
...     checked_out).checkin()


Convert an image and check resultset:

>>> image = zeit.cms.interfaces.ICMSContent(
... 'http://xml.zeit.de/2006/DSC00109_2.JPG')
>>> with zeit.cms.checkout.helper.checked_out(image) as checked_out:
...     image_meta = zeit.content.image.interfaces.IImageMetadata(checked_out)
...     image_meta.title   = 'image title'
...     image_meta.year    = '2006'
...     image_meta.volume  = '05'
...     image_meta.alt     = 'alternative text'
...     image_meta.caption = 'caption text'
>>> image_converter = zeit.solr.interfaces.ISolrConverter(image)
>>> root_node = image_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add ...>
  <doc>
    <field name="alt">alternative text</field>
    <field name="caption">caption text</field>
    <field name="date-last-modified">...</field>
    <field name="last_modified_by">zope.user</field>
    <field name="published">not-published</field>
    <field name="title">image title</field>
    <field name="type">image</field>
    <field name="uuid">{urn:uuid:a429930f-f213-4dfb-b02a-441a134e0d09}</field>
    <field name="volume">5</field>
    <field name="uniqueId">http://xml.zeit.de/2006/DSC00109_2.JPG</field>
    <field name="year">2006</field>
    <field name="icon">/@@/zeit-content-image-interfaces-IImage-zmi_icon.png</field>
    <field name="graphical-preview-url">/repository/2006/DSC00109_2.JPG/@@thumbnail</field>
  </doc>
</add>
<BLANKLINE>


Convert a centerpage and check resultset:
(TODO: Use centerpage with dav properties!)

>>> cp = zeit.cms.interfaces.ICMSContent(
...     'http://xml.zeit.de/online/2007/01/index')
>>> cp_converter = zeit.solr.interfaces.ISolrConverter(cp)
>>> root_node = cp_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add xmlns:py="http://codespeak.net/lxml/objectify/pytype" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <doc>
    <field ...
  </doc>
</add>
<BLANKLINE>



Get a date
>>> import pytz
>>> date = datetime.datetime.now(tz=pytz.UTC)
>>> date
datetime.datetime...

Checkout article, change last semantic change to date, checkin
>>> dummy = with_statement
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date

>>> root_node = article_converter.convert()
>>> doc_node = root_node.doc
>>> print (doc_node.tag)
doc

Now we are doing some boosting. For today:  

>>> date = datetime.datetime.now(tz=pytz.UTC)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="7">...
...<field name="boost">7</field>...
<BLANKLINE>

For day 1
>>> date = datetime.datetime.now(tz=pytz.UTC) - datetime.timedelta(days=1)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="6">...
...<field name="boost">6</field>...
<BLANKLINE>

For day 6
>>> date = datetime.datetime.now(tz=pytz.UTC) - datetime.timedelta(days=6)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="4">...
...<field name="boost">4</field>...
<BLANKLINE>

For day 7
>>> date = datetime.datetime.now(tz=pytz.UTC) - datetime.timedelta(days=7)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="3">...
...<field name="boost">3</field>...
<BLANKLINE>

For day 20
>>> date = datetime.datetime.now(tz=pytz.UTC) - datetime.timedelta(days=20)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="3">...
...<field name="boost">3</field>...
<BLANKLINE>

For day 30
>>> date = datetime.datetime.now(tz=pytz.UTC) - datetime.timedelta(days=30)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="2">...
...<field name="boost">2</field>...
<BLANKLINE>

For day 70
>>> date = datetime.datetime.now(tz=pytz.UTC) - datetime.timedelta(days=70)
>>> with zeit.cms.checkout.helper.checked_out(article) as checked_out:
...     zeit.cms.content.interfaces.ISemanticChange(checked_out).last_semantic_change = date
>>> root_node = article_converter.convert()
>>> print lxml.etree.tostring(root_node, pretty_print=True)
<add...<doc boost="1">...
...<field name="boost">1</field>...
<BLANKLINE>

